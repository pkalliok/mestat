#!/bin/sh

BASEURL="$1"
TMPFILE="testing/page"
COOKIES="testing/cookies"
FAILED_PAGES="testing/failed-pages"
FAILED=""
URL="no page"
rm "$FAILED_PAGES"

run_test() {
	echo -n "$1... "
	eval "$2" && echo pass && return
	echo FAIL
	echo "$URL: " >> "$FAILED_PAGES"
	echo | cat "$TMPFILE" - >> "$FAILED_PAGES"
	FAILED="$FAILED
	$1 ($URL)"
}

post_page() {
	run_test "Posting $1 $2" \
		"curl -is -b '$COOKIES' -c '$COOKIES' '$2' \
		--data-urlencode '__anti-forgery-token=$CSRF' $3 > '$TMPFILE'"
	URL="$2 $3"
}

put_page() {
	run_test "Putting $1 $2" \
		"echo '$3' | curl -is -b '$COOKIES' -c '$COOKIES' '$2' \
		-H 'X-CSRF-Token: $CSRF' -T - > '$TMPFILE'"
	URL="$2 PUT $3"
}

fetch_page() {
	run_test "Fetching $1 $2" \
		"curl -is -b '$COOKIES' -c '$COOKIES' '$2' > '$TMPFILE'"
	URL="$2"
}

check_status() {
	run_test "Checking status code $1" \
	'grep -q "^HTTP/[0-9.]* '"$1"'" "$TMPFILE"'
}

fetch_page 'test page' "$BASEURL/hello"
check_status 200
run_test "Checking test page content" 'grep -q "Hello World" "$TMPFILE"'
fetch_page 'main page' "$BASEURL"
check_status 200
run_test "Checking mainpage is HTML" \
  'grep -qi "content-type: text/html" "$TMPFILE"'
run_test "Checking mainpage has a map div" \
  'grep -q "<div id=\"map\">" "$TMPFILE"'
run_test "Checking mainpage embeds a map" \
  'grep -q "/js/embedmap.js" "$TMPFILE"'
run_test "Checking mainpage uses default location" \
  'grep -q "value=\"60.17671\"" "$TMPFILE"'
fetch_page 'main page with location parameters' \
  "$BASEURL/?latitude=50&longitude=30.559"
check_status 200
run_test "Checking location got passed on" \
  'grep -q "value=\"30.559\"" "$TMPFILE"'
run_test "Checking it has the CSRF token" \
  'grep -q "name=\"__anti-forgery-token\"" "$TMPFILE"'

fetch_page 'CSRF token' "$BASEURL/api/v1/get-csrf-token"
check_status 200
CSRF=`grep -o '"csrf-token": *"[^"]*"' "$TMPFILE" | cut -d: -f2 | cut -d'"' -f2`
run_test "Check we got a CSRF token" 'test -n "$CSRF"'
fetch_page 'search' "$BASEURL/api/v1/search?long=24.93545&lat=60.16952"
check_status 200
run_test "Checking query points" 'grep -q "24.93545,60.16952" "$TMPFILE"'
run_test "Checking query tags" 'grep -q "capital" "$TMPFILE"'
fetch_page 'limit search' \
  "$BASEURL/api/v1/search?long=0&lat=0&limit=1&maxdist=1000"
check_status 200
run_test "Checking only two responses given" \
  'test X`grep -o "coord" "$TMPFILE" | wc -l` = X2'
fetch_page 'exact point query' "$BASEURL/api/v1/point/25.46816/65.01236"
check_status 200
run_test "Checking response is JSON" \
  'grep -qi "^content-type: application/json" "$TMPFILE"'
run_test "Checking response is at requested location" \
  'grep -qi "25.46816, *65.01236" "$TMPFILE"'
put_page 'save point' "$BASEURL/api/v1/point/31.5/77.3" \
  '{"coord":[31.5,77.3],"tags":[["atehwa","test"],["atehwa","metsä"]]}'
check_status 201
run_test "Checking response location" \
  'grep -qi "location: .*/api/v1/point/31.5/77.3" "$TMPFILE"'

run_test "Fetching KML" \
  'curl -is -H "Accept: application/vnd.google-earth.kml+xml" \
    "$BASEURL/api/v1/search?long=24.93545&lat=60.16952&maxdist=1000&limit=1" \
    > "$TMPFILE"'
check_status 200
run_test "Checking response is KML" \
  'grep -qi "^content-type: application/vnd.google-earth.kml+xml" "$TMPFILE"'
run_test "Checking the KML contains a city" \
  'grep -qi "<name>city</name>" "$TMPFILE"'
run_test "Checking the KML has a point with coordinates" \
  'grep -qi "<Point><coordinates>[0-9.]*,[0-9.]*</coordinates>" "$TMPFILE"'

fetch_page 'nonexistent point' "$BASEURL/api/v1/point/31.7/20.555555"
check_status 404
run_test "Checking error message" \
  'grep -q "error. *: *.*no such point" "$TMPFILE"'
fetch_page 'invalid search' "$BASEURL/api/v1/search?limit=52"
check_status 400
run_test "Checking response is JSON" \
  'grep -qi "^content-type: application/json" "$TMPFILE"'
fetch_page 'nonexistent call' "$BASEURL/api/v1/foobar"
check_status 404
run_test "Checking error message is in JSON" \
  'grep -q "error. *: *.this API call" "$TMPFILE"'

post_page "new point data" "$BASEURL/add-point" \
  '-d latitude=63.9417 -d longitude=-16.4558 --data-urlencode "tags=ice, jää"'
check_status 303
run_test "Checking redirection" \
  'grep -qi "location: .*/?latitude=63.9417&longitude=-16.4558" "$TMPFILE"'
fetch_page 'new point handler' "$BASEURL/add-point"
check_status 405
post_page 'new point with missing parameters' "$BASEURL/add-point" "-d tags=a"
check_status 400
run_test "Checking missing parameters" \
  'grep -qi "malformed parameter:.*latitude" "$TMPFILE"'
run_test "Removing temporary file and cookies" 'rm "$TMPFILE" "$COOKIES"'

test -n "$FAILED" && echo "\n\nSome tests failed: $FAILED" \
	&& echo "See $FAILED_PAGES for details" && exit 1

